////////////////////////////////
//                            //
// IBM Design Language        //
// Color Palette              //
//                            //
////////////////////////////////

//////////////////////////////
// Color Palette
//
// Gets the specified color from the specified color palette
//
// Usage:
//
// background: color('blue', 80); // #1d3649
// background: color('blue');     // #4178be
//
// background: color('blue', 80, $alpha: 0.5); // rgba(29, 54, 73, 0.5)
// background: color('blue', $alpha: 0.5); // rgba(65, 120, 190, 0.5)
//
//////////////////////////////
@function color($palette, $tone: 'core', $alpha: 1) {
  // Add a little helper so tone can be passed as single digit number
  @if type-of($tone) == 'number' {
    @if $tone % 10 == $tone {
      $tone: $tone * 10;
    }
  }

  // Because it's spelled gr(a|e)y and we've got spaces
  @if $palette == 'grey' {
    $palette: 'gray';
  }
  @else if $palette == 'warm-grey' or $palette == 'warm grey' or $palette == 'warm gray' {
    $palette: 'warm-gray';
  }
  @else if $palette == 'cool-grey' or $palette == 'cool grey' or $palette == 'cool gray' {
    $palette: 'cool-gray';
  }
  @else if $palette == 'neutral white' {
    $palette: 'neutral-white';
  }
  @else if $palette == 'cool white' {
    $palette: 'cool-white';
  }
  @else if $palette == 'warm white' {
    $palette: 'warm-white';
  }

  @return rgba(map-get(map-get($__ibm-color-palettes, $palette), $tone), $alpha);
}

//////////////////////////////
// Tint and Shade Functions
//////////////////////////////
// Internal helper: finds the palette and key of a color
@function _ibm-find-color($color) {
  $found-index: false;
  $found-palette: false;
  @each $palette, $vals in $__ibm-color-palettes {
    @if not $found-index {
      @each $key, $clr in $vals {
	@if $color == $clr and $key != 'core' {
	  $found-index: $key;
	  $found-palette: $palette;
	}
      }
    }
  }

  $error-message: 'Color #{$color} is not an IBM color';

  @if not $found-index {
    @if feature-exists(at-error) {
      @error $error-message;
    }
    @else {
      @warn $error-message;
    }
  }
  @return ('index': $found-index, 'palette': $found-palette);
}

// Internal helper: transforms amount into base 10, rounding
@function _ibm-round-tint-shade($amount) {
  @if $amount < 10 {
    $amount: $amount * 10;
  }

  $return: round($amount);
  $remainder: $return % 10;
  $return: $return - $remainder;
  @if $remainder >= 5 {
    $return: $return + 10;
  }

  @return $return;
}

//////////////////////////////
// Tint an IBM Color
//
// Pass in a color (as retrieved from the `color` function) and how many stops you want to tint (lighten) the color along its palette.
// Pegged to the lightest color in the palette
//////////////////////////////
@function color-tint($color, $amount) {
  $key: _ibm-find-color($color);
  $index: map-get($key, 'index');
  $palette: map-get($key, 'palette');
  $move: _ibm-round-tint-shade($amount);

  $index: $index - $move;
  @if ($index < 10) {
    $index: 10;
  }

  @return color($palette, $index);
}

//////////////////////////////
// Shade an IBM Color
//
// Pass in a color (as retrieved from the `color` function) and how many stops you want to shade (darken) the color along its palette.
// Pegged to the darkest color in the palette
//////////////////////////////
@function color-shade($color, $amount) {
  $key: _ibm-find-color($color);
  $index: map-get($key, 'index');
  $palette: map-get($key, 'palette');
  $move: _ibm-round-tint-shade($amount);

  $index: $index + $move;
  @if ($index > 100) {
    $index: 100;
  }

  @return color($palette, $index);
}

//////////////////////////////
// Get Colors
//
// Lists out available colors
//////////////////////////////
@function get-colors($palette: null) {
  // Return a list of colors available if nothing is passed in
  @if $palette == null {
    @return map-keys($__ibm-color-palettes);
  }
  // Return the full color map if 'all' is passed in
  @else if $palette == 'all' {
    @return $__ibm-color-palettes;
  }
  // Return just the color map if a specific color is passed in
  @else {
    @return map-get($__ibm-color-palettes, $palette);
  }
}

//////////////////////////////
// IBM Color Palettes
//////////////////////////////
$__ibm-color-palettes: (
  'cool blue': (
    core: #2a51b8,
    0: #e5e9ff,
    10: #cdd7ff,
    20: #abbdff,
    30: #84a2ff,
    40: #648fff,
    50: #3c6df0,
    60: #2a51b8,
    70: #254190,
    80: #203065,
    90: #1b2449
  ),
  'blue': (
    core: #1d79ca,
    0: #e2eafd,
    10: #c7d9fb,
    20: #a0c1f9,
    30: #63a8ff,
    40: #3c97f4,
    50: #1d79ca,
    60: #2c5a90,
    70: #224874,
    80: #1d3452,
    90: #19273c
  ),
  'warm blue': (
    core: #009de2,
    0: #dbecff,
    10: #badcff,
    20: #81c6ff,
    30: #3caef4,
    40: #009de2,
    50: #007eb6,
    60: #005e8a,
    70: #154a6b,
    80: #16364d,
    90: #142939
  ),
  'aqua': (
    core: #00b7c0,
    0: #b6f5fb,
    10: #6aebf4,
    20: #42d2db,
    30: #00b7c0,
    40: #00a4ac,
    50: #00838a,
    60: #006368,
    70: #134e52,
    80: #14393b,
    90: #122a2c
  ),
  'teal': (
    core: #40d5bb,
    0: #acf9e7,
    10: #67eed3,
    20: #40d5bb,
    30: #00baa1,
    40: #00a78f,
    50: #008673,
    60: #006456,
    70: #124f44,
    80: #133a32,
    90: #122b26
  ),
  'green': (
    core: #00be6a,
    0: #aefbc8,
    10: #6ff1a2,
    20: #3dd983,
    30: #00be6a,
    40: #00aa5e,
    50: #00884a,
    60: #006737,
    70: #11512e,
    80: #123b23,
    90: #112c1b
  ),
  'lime': (
    core: #95d13c,
    0: #cdf8a1,
    10: #b4e876,
    20: #95d13c,
    30: #81b532,
    40: #73a22c,
    50: #5b8121,
    60: #426200,
    70: #374c1a,
    80: #283912,
    90: #1f2a10
  ),
  'yellow': (
    core: #fed500,
    0: #ffe8af,
    10: #fed500,
    20: #e2bd00,
    30: #c4a300,
    40: #af9100,
    50: #8c7400,
    60: #685717,
    70: #52451b,
    80: #3c3318,
    90: #2d2615
  ),
  'peach': (
    core: #ffae55,
    0: #ffe5d5,
    10: #ffcfaa,
    20: #ffae55,
    30: #f58b00,
    40: #dc7c00,
    50: #ad6422,
    60: #834b17,
    70: #663c1b,
    80: #4a2d18,
    90: #372215
  ),
  'orange': (
    core: #ff8254,
    0: #fde5e0,
    10: #fccec5,
    20: #faad9a,
    30: #ff8254,
    40: #f76700,
    50: #c25622,
    60: #8f4224,
    70: #73341b,
    80: #532718,
    90: #3d1e15
  ),
  'coral': (
    core: #ff5e38,
    0: #fde5e3,
    10: #fccec9,
    20: #faaca3,
    30: #ff806d,
    40: #ff5e38,
    50: #d14722,
    60: #9a3924,
    70: #773023,
    80: #56251d,
    90: #3f1d18
  ),
  'red': (
    core: #df3423,
    0: #fde5e4,
    10: #fccdcc,
    20: #faaba9,
    30: #f8837e,
    40: #ff5c52,
    50: #df3423,
    60: #ac200e,
    70: #84231b,
    80: #5f1c18,
    90: #461715
  ),
  'magenta': (
    core: #ff4ab3,
    0: #ffe3ef,
    10: #ffcae2,
    20: #ffa4d0,
    30: #ff76be,
    40: #ff4ab3,
    50: #d82793,
    60: #ab0072,
    70: #841459,
    80: #601540,
    90: #461330
  ),
  'purple': (
    core: #c22dd5,
    0: #f7e4fb,
    10: #f0cdf7,
    20: #e7aaf3,
    30: #de83ed,
    40: #d864e9,
    50: #c22dd5,
    60: #9320a2,
    70: #71237c,
    80: #501e58,
    90: #3b1a40
  ),
  'violet': (
    core: #7D24C9,
    0: #EFE6FF,
    10: #E1D1FF,
    20: #D0B2FF,
    30: #BE8FFF,
    40: #B375FF,
    50: #A23DFF,
    60: #7D24C9,
    70: #602797,
    80: #44216A,
    90: #321C4C
  ),
  'indigo': (
    core: #3b33a8,
    0: #e9e8ff,
    10: #d6d4ff,
    20: #bbb9ff,
    30: #9f9bff,
    40: #8a85ff,
    50: #675eff,
    60: #4a40d5,
    70: #3b33a8,
    80: #2d2973,
    90: #232051
  ),
  'gray': (
    core: #949394,
    0: #eaeaea,
    10: #d8d8d8,
    20: #c0bfc0,
    30: #a6a5a6,
    40: #949394,
    50: #777677,
    60: #595859,
    70: #464646,
    80: #343334,
    90: #272727
  ),
  'cool gray': (
    core: #6f7878,
    0: #e3ecec,
    10: #d0dada,
    20: #b8c1c1,
    30: #9fa7a7,
    40: #8c9696,
    50: #6f7878,
    60: #535a5a,
    70: #424747,
    80: #343334,
    90: #272727
  ),
  'warm gray': (
    core: #5f5757,
    0: #efe9e9,
    10: #e2d5d5,
    20: #ccbcbc,
    30: #b4a1a1,
    40: #9e9191,
    50: #7d7373,
    60: #5f5757,
    70: #4b4545,
    80: #373232,
    90: #2a2626
  ),
  'neutral-white': (
    core: #fdfdfd,
    10: #fdfdfd,
    20: #f9f9f9,
    30: #f4f4f4,
    40: #ececec
  ),
  'cool-white': (
    core: #fbfcfc,
    10: #fbfcfc,
    20: #f9f9fb,
    30: #f0f2f4,
    40: #ecf0f2
  ),
  'warm-white': (
    core: #fbfbfb,
    10: #fbfbfb,
    20: #fdfbfb,
    30: #f7f5f5,
    40: #f2eeee
  ),
  'black': (
    core: #000
  ),
  'white': (
    core: #fff
  )
);
